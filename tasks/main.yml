---

- name: establish packages
  package:
    name:
      - lxd
      - lxd-client
    state: "{{ use_snap | ternary('absent','present') }}"
  tags: install

- name: establish group
  group:
    name: lxd
    system: true
    state: present
  tags: install

- name: establish user in group
  when: ansible_user is defined
  user:
    name: "{{ ansible_user }}"
    groups: lxd
    append: true
  tags: install

- name: establish uid mapping
  when: ansible_user_uid is defined
  become: true
  lineinfile:
    path: /etc/subuid
    line: "{{ item }}:{{ ansible_user_uid }}:1"
    state: present
  loop:
    - lxd
    - root

- name: establish gid mapping
  when: ansible_user_gid is defined
  become: true
  lineinfile:
    path: /etc/subgid
    line: "{{ item }}:{{ ansible_user_gid }}:1"
    state: present
  loop:
    - lxd
    - root

- name: establish snap package
  when: use_snap | bool
  snap:
    name: lxd
    state: present
  tags: install

- name: setup service
  when: ansible_service_mgr == 'systemd'
  systemd:
    name: "{{ use_snap | ternary('snap.lxd.daemon.service','lxd') }}"
    state: started
    enabled: true
    scope: system
  tags: install

- name: add minimal ubuntu repo
  command: >-
    lxc remote add --protocol simplestreams
    ubuntu-minimal https://cloud-images.ubuntu.com/minimal/releases/
  register: __insert_minimal_ubuntu
  changed_when: __insert_minimal_ubuntu.rc == 0
  failed_when: false
  tags: configure

- name: auto-configure daemon
  when: configuration is not defined
  become: true
  command: "{{ use_snap | ternary('/snap/bin/lxd','lxd') }} init --auto"
  changed_when: false
  tags: configure

- name: configure daemon
  when: configuration is defined
  vars:
    __lxd_command: "{{ use_snap | ternary('/snap/bin/lxd','lxd') }}"
  block:
    - name: read current configuration
      when: configuration is defined
      become: true
      command: "{{ __lxd_command }} init --dump"
      changed_when: false
      register: __used_lxd_configuration
      tags: configure

    - name: evaluate current configuration
      set_fact:
        __desired_configuration: "{{ configuration | combine({'profiles': []}) }}"
        __current_configuration: "{{ __used_lxd_configuration.stdout | from_yaml | combine({'profiles': []}) }}"
      tags: configure

    - name: establish desired configuration
      when: __desired_configuration != __current_configuration
      become: true
      command: "{{ __lxd_command }} init --preseed -- {{ configuration }}"
      register: __configuration_seeding
      failed_when: __configuration_seeding.rc != 0
      tags: configure

- name: establish profiles
  lxd_profile: "{{ item }}"
  loop: "{{ profiles }}"
  tags: configure
